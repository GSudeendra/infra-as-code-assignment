name: destroy-infrastructure-pipeline

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-oidc-${{ github.repository_owner }}-${{ github.event.repository.name }}

jobs:
  destroy-main-infra:
    name: destroy-main-infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Remote State Outputs
        uses: actions/download-artifact@v3
        with:
          name: remote-state-outputs
          path: remote-state-outputs
      - name: Read Output Files into ENV
        run: |
          echo "S3_BUCKET=$(cat remote-state-outputs/s3_bucket_name.txt)" >> $GITHUB_ENV
          echo "DYNAMO_TABLE=$(cat remote-state-outputs/dynamodb_table_name.txt)" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: DestroyMainInfraSession
          role-duration-seconds: 1800
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5.0"
      - name: Terraform Init (main)
        run: |
          cd infra
          region="${AWS_REGION:-us-east-1}"
          terraform init \
            -backend-config="bucket=${S3_BUCKET}" \
            -backend-config="dynamodb_table=${DYNAMO_TABLE}" \
            -backend-config="region=${region}"
      - name: Terraform Validate (main)
        run: |
          cd infra
          terraform validate
      - name: Terraform Destroy (main)
        run: |
          cd infra
          terraform destroy -auto-approve

  destroy-remote-state:
    name: destroy-remote-state
    runs-on: ubuntu-latest
    needs: [destroy-main-infra]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: DestroyRemoteStateSession
          role-duration-seconds: 1800
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5.0"
      - name: Terraform Init (remote-state)
        run: |
          cd infra/backend
          terraform init
      - name: Terraform Validate (remote-state)
        run: |
          cd infra/backend
          terraform validate
      - name: Terraform Destroy (remote-state)
        run: |
          cd infra/backend
          terraform destroy -auto-approve
